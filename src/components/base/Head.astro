---
import { Schema } from 'astro-seo-schema';
import { ClientRouter } from 'astro:transitions';

import merge from 'lodash.merge';

import Analytics from '../common/Analytics.astro';

import Styles from './Styles.astro';

import logo from '@/assets/image/logo.png';
import { getConfig, getLanguage, ensureNoTrailingSlash } from '@/utils';

interface Props {
  title?: string;
  description?: string;
  keywords?: string;
  ogImage?: string;
  pubDate?: string;
  lastModDate?: string;
  author?: string;
}
const SITE = getConfig();
const languages = getLanguage();

const { title, description, ogImage, pubDate, lastModDate, author, keywords } =
  Astro.props;

const pageTitle = title || SITE.title;
const pageDescription = description || SITE.description;

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const ogImageURL = ogImage ? new URL(ogImage, Astro.site) : '';

const otherSchema = {
  '@context': 'https://schema.org',
  'url': new URL(Astro.url.pathname, Astro.site).toString(),
  'mainEntity': {
    '@type': 'Organization',
    'telephone': SITE.telephone,
    'logo': new URL(logo.src, Astro.site).toString(),
    'email': SITE.email,
    'sameAs': [...SITE.share],
    'name': SITE.brandName || SITE.companyName,
    'url': new URL(Astro.site || SITE.website).toString(),
    'location': {
      '@type': 'Place',
      'address': {
        '@type': 'PostalAddress',
        'addressCountry': 'China',
      },
    },
    'mainEntityOfPage': {
      '@type': 'WebPage',
      'url': new URL(Astro.url.pathname, Astro.site).toString(),
      'name': title,
      'description': description,
      'keywords': keywords,
    },
  },
  'potentialAction': {
    '@type': 'SearchAction',
    'target': new URL('/search?q={search_term_string}', Astro.site).toString(),
    'query-input': 'required name=search_term_string',
  },
};

const item = merge(otherSchema, {});
---

<head>
  <!-- Global Metadata -->
  <meta charset="utf-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />

  <meta name="format-detection" content="telephone=no" />

  <title>{pageTitle}</title>
  <meta name="title" content={pageTitle} />
  <meta name="description" content={pageDescription} />
  <meta name="keywords" content={keywords} />

  <!-- Open Graph / Facebook -->
  <meta property="og:type" content={pubDate ? 'article' : 'website'} />
  <meta property="og:url" content={canonicalURL} />
  <meta property="og:title" content={pageTitle} />
  <meta property="og:description" content={pageDescription} />
  <meta property="og:image" content={ogImageURL} />
  <meta property="og:site_name" content={title} />
  <meta property="og:locale" content={SITE.ogLocale} />
  {
    pubDate && author && (
      <>
        <meta property="article:author" content={author} />
        <meta property="article:published_time" content={pubDate} />
        <meta property="article:modified_time" content={lastModDate} />
      </>
    )
  }

  <!-- Twitter -->
  <meta property="twitter:card" content="summary_large_image" />
  <meta property="twitter:url" content={canonicalURL} />
  <meta property="twitter:title" content={pageTitle} />
  <meta property="twitter:description" content={pageDescription} />
  <meta property="twitter:image" content={ogImageURL} />

  <!-- Canonical URL -->
  <link rel="canonical" href={canonicalURL} />

  <!-- Sitemap -->
  <link rel="sitemap" href="/sitemap-index.xml" />
  <link rel="alternate" type="application/rss+xml" href="/rss.xml" />
  <link rel="sitemap" type="application/xml" href="/sitemap-image.xml" />

  <Fragment>
    {
      languages.map((item) => (
        <link
          rel="alternate"
          hreflang={item.href}
          href={ensureNoTrailingSlash(
            `https://${item.href}.${Astro.site?.host}`
          )}
        />
      ))
    }
  </Fragment>

  <ClientRouter fallback="swap" />

  <Styles />
  <Analytics />
  <Schema {item} />
  <slot />
</head>
